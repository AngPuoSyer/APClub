// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

generator erd {
  provider                  = "prisma-erd-generator"
  output                    = "../ERD.pdf"
  includeRelationFromFields = true
}

generator nestgraphql {
  provider     = "node node_modules/prisma-nestjs-graphql"
  emitCompiled = true
  purgeOutput  = true
  output       = "./@generated"
}

model User {
  id            String            @id @default(uuid())
  username      String            @unique
  email         String            @unique
  password      String
  tpNumber      String            @unique
  contactNumber String?           @unique
  status        StudentStatusEnum @default(ACTIVE)

  clubAdmin ClubAdmin[]
}

model ClubAdmin {
  id    String @id
  label String

  userId String
  user   User   @relation(fields: [userId], references: [id])
  clubId String
  club   Club   @relation(fields: [clubId], references: [id])

  role        ClubAdminRoleEnum
  roleLabel   String
  clubRequest ClubRequest[]
}

model SuperAdmin {
  id       String @id @default(uuid())
  username String
  password String
}

model Club {
  id          String         @id @default(uuid())
  name        String         @unique
  description String
  status      ClubStatusEnum

  clubAdmin ClubAdmin[]
}

model ClubRequest {
  id          String            @id @default(uuid())
  title       String
  description String
  requestType RequestTypeEnum
  status      RequestStatusEnum
  jobId       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  requesterId String
  requester   ClubAdmin @relation(fields: [id], references: [id])
}

enum StudentStatusEnum {
  ACTIVE
  INACTIVE
  GRADUATED
}

enum ClubAdminRoleEnum {
  PRESIDENT
  VICE_PRESIDENT
  SECRETARY
  ASSISTANT_SECRETARY
  TREASURER
  ASSISTANT_TREASURER
  COMMITEE
}

enum ClubStatusEnum {
  ACTIVE
  INACTIVE
  INVALIDATED
  DEPRECATED
}

enum RequestStatusEnum {
  UNDER_REVIEW
  REJECTED
  APPROVED
}

enum RequestTypeEnum {
  ACTIVITY
  INFORMATION
  COMMITEE
}
